#include "funcs_unit.jsx"#include "funcs_txt.jsx"// // テキストフレーム共通設定(縦書きの場合)function textFrameSharedSetting(text){    text.textRange.characterAttributes.textFont = app.textFonts.getByName("HiraMinPro-W6");    // !? !!の縦中横    for(i=0; i< text.characters.length; i++){        var targetChar = text.characters[i];        if(isKansuji(targetChar.contents))            targetChar.characterAttributes.kerningMethod=AutoKernType.NOAUTOKERN;        targetChar.kerning=0;        if(i==text.characters.length-1) {            if(targetChar.contents.match(/[0-9]|[a-z]/i)){ // 英数字も縦中横                targetChar.baselineDirection = BaselineDirectionType.TateChuYoko;            }            else if(targetChar.contents.match(/[:|\(|\)|#|;]/)){                targetChar.baselineShift = mmToPt(0.25);            }else if(targetChar.contents.match(/\x2d/)){                targetChar.contents='−';                targetChar.characterAttributes.rotation=90;                targetChar.baselineShift = mmToPt(-0.25);            }        }else{            nextChar = text.characters[i+1];            if((targetChar.contents=="!" || targetChar.contents=="?") &&                (nextChar.contents=="!" || nextChar.contents=="?")){                targetChar.baselineDirection = BaselineDirectionType.TateChuYoko;                nextChar.baselineDirection = BaselineDirectionType.TateChuYoko;            }            else if(targetChar.contents=="!" || targetChar.contents=="?"){                targetChar.baselineDirection = BaselineDirectionType.TateChuYoko;            }            else if(targetChar.contents.match(/[0-9]|[a-z]/i)){ // 英数字も縦中横                targetChar.baselineDirection = BaselineDirectionType.TateChuYoko;            }            //else if(targetChar.contents.match(/[\x20-\x7e] | [^!]/)){ // 半角文字はベースラインシフト            else if(targetChar.contents.match(/[:|\(|\)|#|;]/)){                targetChar.baselineShift = mmToPt(0.25);            }else if(targetChar.contents.match(/\x2d/)){                targetChar.contents='−';                targetChar.characterAttributes.rotation=90;                targetChar.baselineShift = mmToPt(-0.25);            }        }    }    // 連続した縦中横のリサイズ！    var tateyokoStack=[];    for(i=0; i< text.characters.length; i++){        targetChar = text.characters[i];        if(targetChar.baselineDirection==BaselineDirectionType.TateChuYoko){            tateyokoStack.push(targetChar);            for(j=0;j<4;j++){                var ofst=i+j+1;                if(ofst==text.characters.length) break;                var next=text.characters[ofst];                if(next.baselineDirection==BaselineDirectionType.TateChuYoko){                    if(next.contents!=' ' && next.contents!='' && next.contents!='\n' && next.contents!='\r\n' && next.contents!='\r')                        tateyokoStack.push(next);                }            }            if(tateyokoStack.length==2){                tateyokoStack[0].characterAttributes.horizontalScale=80;                tateyokoStack[1].characterAttributes.horizontalScale=80;            }            else if(tateyokoStack.length==3){                tateyokoStack[0].characterAttributes.horizontalScale=50;                tateyokoStack[1].characterAttributes.horizontalScale=50;                tateyokoStack[2].characterAttributes.horizontalScale=50;            }            else if(tateyokoStack.length==4){                tateyokoStack[0].characterAttributes.horizontalScale=33;                tateyokoStack[1].characterAttributes.horizontalScale=33;                tateyokoStack[2].characterAttributes.horizontalScale=33;                tateyokoStack[3].characterAttributes.horizontalScale=33;            }            i+=tateyokoStack.length;            tateyokoStack=[];        }    }}function textFrameSharedSettingYoko(text){    text.textRange.characterAttributes.textFont = app.textFonts.getByName("HiraMinPro-W6");    for(i=0; i< text.characters.length; i++){        targetChar = text.characters[i];        if(targetChar.contents.match(/[:|\(|\)|#|;]/)){            targetChar.baselineShift = mmToPt(0.25);        }    }    text.rotate(270,true,false,false,false,Transformation.TOPLEFT);    text.translate(text.width,0);}function makeAreaTextTate(txt,sizeQ,rect,leading){    var area = app.activeDocument.pathItems.rectangle(rect[0] , rect[1], rect[2], rect[3]);    var text = app.activeDocument.textFrames.areaText ( area );    text.contents = txt;    text.orientation = TextOrientation.VERTICAL;    text.textRange.characterAttributes.size = mmToPt(Qtomm(sizeQ));    text.textRange.characterAttributes.autoLeading = false;    var textSizePt = mmToPt(Qtomm(sizeQ));    var space = leading + textSizePt;    text.textRange.characterAttributes.leading = space;     textFrameSharedSetting(text);    return text;}function makeAreaTextYoko(txt,sizeQ,rect,leading){    var area = app.activeDocument.pathItems.rectangle(rect[0] , rect[1], rect[2], rect[3]);    var text = app.activeDocument.textFrames.areaText ( area );    text.contents = txt;    text.orientation = TextOrientation.HORIZONTAL;    text.textRange.characterAttributes.size = mmToPt(Qtomm(sizeQ));    text.textRange.characterAttributes.autoLeading = false;    var textSizePt = mmToPt(Qtomm(sizeQ));    var space = leading + textSizePt;    text.textRange.characterAttributes.leading = space;     textFrameSharedSettingYoko(text);    return text;}function makeAreaText(txt, sizeQ, rect, leading, isEijiTitle){    if(!isEijiTitle) return makeAreaTextTate(txt, sizeQ, rect, leading);    else return makeAreaTextYoko(txt, sizeQ, rect, leading);}// サイズ決定ようfunction makeTextSingle(txt,defQ, isYoko){    if(!isYoko) return makeTextTate(txt, defQ);    else return makeTextYoko(txt, defQ);}function makeTextTate(txt, sizeQ){    docObj = activeDocument;    textObj = docObj.textFrames.add();    textObj.contents = txt;    textObj.orientation = TextOrientation.VERTICAL;    textObj.textRange.characterAttributes.size = mmToPt(Qtomm(sizeQ));    textFrameSharedSetting(textObj);    return textObj;}function makeTextYoko(txt, sizeQ){    docObj = activeDocument;    textObj = docObj.textFrames.add();    textObj.contents = txt;    textObj.orientation = TextOrientation.HORIZONTAL;    textObj.textRange.characterAttributes.size = mmToPt(Qtomm(sizeQ));    textFrameSharedSettingYoko(textObj);    return textObj;}function deselectObjs(objs){    for(var i=0;i<objs.length;i++){        var obj = objs[i];        obj.selected=false;    }}function getSelectItems(box){    var items = app.activeDocument.pageItems;    for(var i=0;i<items.length;i++){        var rect = items[i].geometricBounds;        var x1 = rect[0];        var y1 = rect[1] * -1;        var x2 = rect[2];        var y2 = rect[3] * -1;        if((x1>=box[0])&&(x2<=box[2])){            if((y1>=box[1])&&(y2<=box[3])){                items[i].selected = true;            }        }    }    return app.activeDocument.selection;}